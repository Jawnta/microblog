---

- name: Debug docker_image_tag
  debug:
    msg: "The docker_image_tag is {{ docker_image_tag }}"

- name: Start or update Microblog container
  docker_container:
    name: microblog
    image: "jawnta/microblog:{{ docker_image_tag | default('v0.2.0') }}"
    state: started
    restart_policy: always
    env:
      MYSQL_ROOT_PASSWORD: "{{ MYSQL_ROOT_PASSWORD }}"
      MYSQL_DATABASE: "{{ MYSQL_DATABASE }}"
      MYSQL_USER: "{{ MYSQL_USER }}"
      MYSQL_PASSWORD: "{{ MYSQL_PASSWORD }}"
      DATABASE_URL: "mysql+pymysql://{{ MYSQL_USER }}:{{ MYSQL_PASSWORD }}@{{ DATABASE_HOST }}/{{ MYSQL_DATABASE }}"
      DATABASE_HOST: "{{ DATABASE_HOST }}"
    ports:
      - "8000:5000"
  register: container_action

- name: Check if the container is running
  docker_container_info:
    name: microblog
  register: microblog_container

# - name: Verify container is running
#   assert:
#     that:
#       - microblog_container.exists
#       - microblog_container.container.State.Running
#   retries: 5
#   delay: 10
#   until: result is succeeded

# - name: Verify Microblog version
#   uri:
#     url: "http://{{ inventory_hostname }}/version"
#     return_content: yes
#   register: version_response
#   ignore_errors: yes

# - name: Check if correct version is deployed
#   assert:
#     that:
#       - version_response.status == 200
#       - "'{{ docker_image_tag }}' in version_response.json.version"
#     fail_msg: "Version check failed! Expected 'v{{ docker_image_tag }}', got '{{ version_response.json.version }}'"
#     success_msg: "Version check passed. Running version '{{ docker_image_tag }}'"
#   when: version_response is defined and version_response.status == 200
