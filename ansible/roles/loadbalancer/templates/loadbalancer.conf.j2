http {
    # Hide Nginx version for security
    server_tokens off;
    # Upstream definition
    upstream app-hosts {
        {% for host in groups['appserver'] %}
        server {{ host }}:8000;
        {% endfor %}
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Server blocks
    server {
        listen 80;
        server_name  {{ domain_name }} www.{{ domain_name }};
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name  {{ domain_name }} www.{{ domain_name }};

        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/{{ domain_name }}/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN";  # Anti-clickjacking header
        add_header X-Content-Type-Options "nosniff";  # Prevent MIME sniffing
        add_header Permissions-Policy "interest-cohort=()";  # Permissions policy

        # Set Secure flag on cookies
        proxy_cookie_path / "/; secure";

        # Proxy to upstream
        location / {
            proxy_pass http://app-hosts;
        }

        location /metrics {
            stub_status on;
        }
        
        location /grafana/ {
            proxy_pass http://{{ groups['monitoring'][0] }}:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
    }

}